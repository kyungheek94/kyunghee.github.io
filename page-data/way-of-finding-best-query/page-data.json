{"componentChunkName":"component---src-templates-blog-post-js","path":"/way-of-finding-best-query/","result":{"data":{"markdownRemark":{"html":"<p><em>안된다.</em><br>\n<em>이 시대에 분산 쿼리라니</em><br>\n<em>요즘 세상에 <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/linked-servers/linked-servers-database-engine?view=sql-server-ver15\">linked server</a>라니</em></p>\n<hr>\n<p>모델은 간단하다.<br>\n<code class=\"language-jstext\">서버 a</code>에서 <code class=\"language-jstext\">서버 b</code>의 테이블을 조인으로 연결해 조회하면 된다.<br>\n살짝 역겨운 것은 10개의 테이블을 <code class=\"language-jstext\">UNION ALL</code>한 <code class=\"language-jstext\">뷰</code>가 본 서버의 대상 테이블이다</p>\n<p> </p>\n<ol>\n<li>\n<p>일반 <code class=\"language-jstext\">outer join</code></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-jssql\"><code class=\"language-jssql\"><span class=\"token keyword\">SELECT</span> a<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> a_tbl a\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token keyword\">OPENQUERY</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">'SELECT * FROM db.dbo.tbl'</span><span class=\"token punctuation\">)</span> i <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>id\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> a<span class=\"token punctuation\">.</span><span class=\"token keyword\">date</span> <span class=\"token keyword\">DESC</span>\n<span class=\"token keyword\">OFFSET</span> <span class=\"token number\">1</span> <span class=\"token keyword\">ROWS</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> <span class=\"token number\">100</span> <span class=\"token keyword\">ROWS</span> ONLY<span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>놀랍지 않겠지만 반올림한 50초의 실행시간이 걸린다.</em></p>\n</li>\n</ol>\n<p> </p>\n<ol start=\"2\">\n<li>\n<p>임시 테이블</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-jssql\"><code class=\"language-jssql\"><span class=\"token keyword\">WITH</span> i <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">OPENQUERY</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">'SELECT id FROM db.dbo.tbl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> a_tbl a\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> i <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>id\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> a<span class=\"token punctuation\">.</span><span class=\"token keyword\">date</span> <span class=\"token keyword\">DESC</span>\n<span class=\"token keyword\">OFFSET</span> <span class=\"token number\">0</span> <span class=\"token keyword\">ROWS</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> <span class=\"token number\">100</span> <span class=\"token keyword\">ROWS</span> ONLY<span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>여전히 무난한 40초</em></p>\n</li>\n</ol>\n<p> </p>\n<ol start=\"3\">\n<li>\n<p>사전 정의된 조건절<br>\n<code class=\"language-jstext\">sql</code> quote의 escape는 두번 사용이다</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-jssql\"><code class=\"language-jssql\"><span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@tmp</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">+</span> <span class=\"token string\">''''''</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span> <span class=\"token string\">''''','</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span> <span class=\"token keyword\">FROM</span> a_tbl \n    <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token keyword\">date</span> <span class=\"token keyword\">DESC</span>\n    <span class=\"token keyword\">OFFSET</span> <span class=\"token number\">0</span> <span class=\"token keyword\">ROWS</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> <span class=\"token number\">100</span> <span class=\"token keyword\">ROWS</span> ONLY<span class=\"token punctuation\">)</span> a\n<span class=\"token keyword\">WHERE</span> a<span class=\"token punctuation\">.</span><span class=\"token keyword\">status</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>  \n<span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@sql</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@sql</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT *\n    FROM a_tbl a\n    LEFT OUTER JOIN OPENQUERY(i,  \n            ''SELECT id FROM db.dbo.tbl\n            WHERE id IN ('</span><span class=\"token operator\">+</span><span class=\"token keyword\">LEFT</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@tmp</span><span class=\"token punctuation\">,</span> <span class=\"token function\">LEN</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@tmp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">')'') i\n    ON a.id = i.id\n    ORDER BY a.date DESC\n    OFFSET 1 ROWS FETCH NEXT 100 ROWS ONLY'</span>\n<span class=\"token keyword\">EXEC</span> SP_SQLEXEC <span class=\"token variable\">@sql</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>20초</em></p>\n</li>\n</ol>\n<p> </p>\n<ol start=\"4\">\n<li>\n<p>사전 정의된 조건절 2<br>\n변수에 할당된 길이를 다 사용하여 query가 잘렸었다. <em>정말 다 쓸 줄이야..</em></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-jssql\"><code class=\"language-jssql\"><span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@tmp</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">7000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">+</span> <span class=\"token string\">''''''</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span> <span class=\"token string\">''''','</span>\n<span class=\"token keyword\">FROM</span> a_tbl a\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> a<span class=\"token punctuation\">.</span><span class=\"token keyword\">date</span> <span class=\"token keyword\">DESC</span>\n<span class=\"token keyword\">OFFSET</span> <span class=\"token number\">0</span> <span class=\"token keyword\">ROWS</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> <span class=\"token number\">100</span> <span class=\"token keyword\">ROWS</span> ONLY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@tmp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">LEFT</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@tmp</span><span class=\"token punctuation\">,</span> <span class=\"token function\">LEN</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@tmp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@sql</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@sql</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT *\n    FROM a_tbl a\n    LEFT OUTER JOIN OPENQUERY(i, \n            ''SELECT id FROM db.dbo.tbl WHERE id IN ('</span><span class=\"token operator\">+</span><span class=\"token variable\">@tmp</span><span class=\"token operator\">+</span><span class=\"token string\">')'') i \n    ON a.id = i.id \n    WHERE a.id in ('</span><span class=\"token operator\">+</span><span class=\"token keyword\">replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@tmp</span><span class=\"token punctuation\">,</span><span class=\"token string\">''''''</span><span class=\"token punctuation\">,</span><span class=\"token string\">''''</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">') \n    ORDER BY a.date DESC'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">exec</span> sp_sqlexec <span class=\"token variable\">@sql</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>10초 안쪽으로도 나오지만 여전히 느리다</em></p>\n</li>\n</ol>\n<p> </p>\n<ul>\n<li>\n<p>다른 쿼리  </p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-jssql\"><code class=\"language-jssql\"><span class=\"token keyword\">SELECT</span> a<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">1</span> <span class=\"token keyword\">status</span> <span class=\"token keyword\">FROM</span> server_name<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>tbl <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> a_tbl a\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> a<span class=\"token punctuation\">.</span><span class=\"token keyword\">date</span> <span class=\"token keyword\">DESC</span>\n<span class=\"token keyword\">OFFSET</span> <span class=\"token number\">0</span> <span class=\"token keyword\">ROWS</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> <span class=\"token number\">100</span> <span class=\"token keyword\">ROWS</span> ONLY</code></pre></div>\n<p><em>20초</em><br>\n<code class=\"language-jstext\">ORDER BY</code>가 들어가지 않으면 1초대의 실행시간을 보인다</p>\n</li>\n</ul>\n<p> </p>\n<p>어떤 쿼리든 <code class=\"language-jstext\">execution plan</code>을 보면 view의 테이블 중 백만개의 record가 들어가있는 테이블의 <code class=\"language-jstext\">clustered index scan</code>이 cost의 상당수를 잡아먹는다  </p>","frontmatter":{"title":"여정 of 분산 쿼리","date":"September 25, 2020"},"excerpt":"안된다. 이 시대에 분산 쿼리라니 요즘 세상에 linked server라니 모델은 간단하다. 에서 의 테이블을 조인으로 연결해 조회하면 된다. 살짝 역겨운 것은 1…"}},"pageContext":{"slug":"/way-of-finding-best-query/"}},"staticQueryHashes":["63159454"]}